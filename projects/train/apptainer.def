Bootstrap: docker
From: python:3.10.12-slim-bullseye
Stage: build

%files
# only copy precisely the files we need to keep things
# light and protect against any large files that might
# accidentally get created in this repo
. /opt/aframe/projects/train
../../libs/utils /opt/aframe/libs/utils
../../aframe /opt/aframe/aframe
../../pyproject.toml /opt/aframe/pyproject.toml
../../libs/ledger /opt/aframe/libs/ledger
../../libs/architectures /opt/aframe/libs/architectures

%post
# installing the local package editably via pip
# works, but none of the dependencies (e.g. ml4gw)
# are installed editably, so we'll opt for using
# the full poetry machinery without using a
# virtual environment. Note that this can potentially
# cause issues if the poetry install makes changes to
# the virtualenv package in the base environment, so
# we'll hard pin it to the value we need.
# TODO: there's got to be a better solution here
python -m pip install poetry
pip install poetry-plugin-export
cd /opt/aframe/projects/train
poetry export -o requirements.txt --without-hashes \
    && sed -i 's|\(.*\) @ file://|-e |' requirements.txt

Bootstrap: docker
From: python:3.10.12-slim-bullseye
Stage: final

%files from build
/opt/aframe /opt/aframe

%post
apt-get update
apt-get install -y --no-install-recommends git
apt-get install -y build-essential
apt-get clean

# install pytest so we can run unit tests
# inside container during CI

cd /opt/aframe/projects/train
pip install -r requirements.txt --no-deps --no-cache-dir
pip install -e . --no-deps --no-cache-dir
pip install pytest
